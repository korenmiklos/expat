
  ___  ____  ____  ____  ____ ®
 /__    /   ____/   /   ____/      18.0
___/   /   /___/   /   /___/       MP—Parallel Edition

 Statistics and Data Science       Copyright 1985-2023 StataCorp LLC
                                   StataCorp
                                   4905 Lakeway Drive
                                   College Station, Texas 77845 USA
                                   800-STATA-PC        https://www.stata.com
                                   979-696-4600        stata@stata.com

Stata license: Single-user 2-core  perpetual
Serial number: 501806323834
  Licensed to: Miklos Koren
               CEU MicroData

Notes:
      1. Stata is running in batch mode.
      2. Unicode is supported; see help unicode_advice.
      3. More than 2 billion observations are allowed; see help obs_advice.
      4. Maximum number of variables is set to 5,000 but can be increased;
          see help set_maxvar.

. do code/create/firm_panel.do 

. *Betöltés
. set more off

. clear all

. capture log close

. 
. * find root folder
. here
/Users/koren/Tresorit/Mac/projects/expat/

. local here = r(here)

. 
. log using "`here'/output/firm_panel", text replace
-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/koren/Tresorit/Mac/projects/expat//output/firm_panel.log
  log type:  text
 opened on:  28 Mar 2024, 12:16:50

. 
. * keep only sample from balance-small
. use "`here'/temp/balance-small-clean.dta"

. by frame_id_numeric: egen firm_birth = min(year)

. by frame_id_numeric: egen firm_death = max(year)

. keep frame_id_numeric year firm_birth firm_death foreign

. tempfile sample

. save `sample', replace
(file /var/folders/3b/07ltjm9n0rq1pwkn1_49vqn40000gn/T//St10134.000001 not
    found)
file /var/folders/3b/07ltjm9n0rq1pwkn1_49vqn40000gn/T//St10134.000001 saved
    as .dta format

. 
. use "`here'/temp/ceo-panel.dta", clear 

. 
. * only keep sample firms
. merge m:1 frame_id_numeric year using `sample', keep(match) nogen
(variable year was int, now float to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                           514,377  
    -----------------------------------------

. count if first_year_of_firm == firm_birth
  309,225

. 
. *for descriptives (number of ceo-s and nceo-s in original data, number of ceo
>  and nceo job-spells in original data)
. count
  514,377

. egen company_manager_id = group(frame_id_numeric manager_id)

. codebook manager_id

-------------------------------------------------------------------------------
manager_id                                                    group(manager_id)
-------------------------------------------------------------------------------

                  Type: Numeric (long)

                 Range: [2,1607091]                   Units: 1
         Unique values: 71,919                    Missing .: 0/514,377

                  Mean: 843639
             Std. dev.: 425397

           Percentiles:    10%       25%       50%       75%       90%
                        224586    576653    833179   1.2e+06   1.4e+06

. codebook company_manager_id

-------------------------------------------------------------------------------
company_manager_id                           group(frame_id_numeric manager_id)
-------------------------------------------------------------------------------

                  Type: Numeric (float)

                 Range: [1,82318]                     Units: 1
         Unique values: 82,318                    Missing .: 0/514,377

                  Mean: 39419.5
             Std. dev.: 23724.2

           Percentiles:     10%       25%       50%       75%       90%
                           6743     18845     39556     58934     73272

. 
. * balance panel
. xtset company_manager_id year

Panel variable: company_manager_id (unbalanced)
 Time variable: year, 1980 to 2018, but with gaps
         Delta: 1 unit

. by company_manager_id: generate gap = year - year[_n-1] - 1
(82,318 missing values generated)

. replace gap = 0 if missing(gap)
(82,318 real changes made)

. tabulate gap

        gap |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |    507,987       98.76       98.76
          1 |      3,228        0.63       99.39
          2 |      1,025        0.20       99.58
          3 |        648        0.13       99.71
          4 |        371        0.07       99.78
          5 |        329        0.06       99.85
          6 |        192        0.04       99.88
          7 |        134        0.03       99.91
          8 |        122        0.02       99.93
          9 |        107        0.02       99.95
         10 |         52        0.01       99.96
         11 |         39        0.01       99.97
         12 |         29        0.01       99.98
         13 |         22        0.00       99.98
         14 |         18        0.00       99.99
         15 |         19        0.00       99.99
         16 |         14        0.00       99.99
         17 |          7        0.00       99.99
         18 |          6        0.00       99.99
         19 |          5        0.00      100.00
         20 |          8        0.00      100.00
         21 |          7        0.00      100.00
         22 |          2        0.00      100.00
         23 |          2        0.00      100.00
         24 |          1        0.00      100.00
         25 |          3        0.00      100.00
------------+-----------------------------------
      Total |    514,377      100.00

. 
. * fill in holes of 1 year, but not longer
. expand 1 + (gap == 1), generate(filled_in)
(3,228 observations created)

. replace year = year - 1 if filled_in
(3,228 real changes made)

. 
. * create contiguous spells
. xtset company_manager_id year

Panel variable: company_manager_id (unbalanced)
 Time variable: year, 1980 to 2018, but with gaps
         Delta: 1 unit

. gen change = ceo != L.ceo

. bysort company_manager_id (year): gen job_spell = sum(change)

. 
. * create job begin and end for each manager spell
. bys frame_id_numeric manager_id job_spell: egen job_begin = min(year)

. bys frame_id_numeric manager_id job_spell: egen job_end = max(year)

. keep frame_id_numeric manager_id job_spell year job_begin job_end firm_birth 
> foreign foreignness

. 
. * if first managers arrive in year 1, extrapolate to year 0 - DROP SPELL
. bys frame_id_numeric: egen first_cohort = min(job_begin)

. replace job_begin = job_begin - 1 if (first_cohort == firm_birth + 1) & (job_
> begin == first_cohort)
(53,836 real changes made)

. 
. * NOTE: no collapse and expand --> there might be holes
. sort frame_id_numeric manager_id year

. count if frame_id_numeric == frame_id_numeric[_n-1] & manager_id == manager_i
> d[_n-1] & year != (year[_n-1] + 1)
  3,162

. 
. generate byte expat = foreignness > 0

. ***********************
. * time invariant vars and drop entire series of firms from sample *
. ***********************
. by frame_id_numeric: egen first_year_expat = min(cond(expat == 1, job_begin,.
> ))
(385,624 missing values generated)

. by frame_id_numeric: egen first_year_foreign = min(cond(foreign == 1, year,.)
> )
(365,104 missing values generated)

. 
. * which of the two happened first?
. generate manager_after_owner = first_year_expat - first_year_foreign
(400,054 missing values generated)

. tabulate manager_after_owner

manager_aft |
   er_owner |      Freq.     Percent        Cum.
------------+-----------------------------------
        -29 |         37        0.03        0.03
        -25 |        180        0.15        0.18
        -18 |         41        0.03        0.22
        -16 |        238        0.20        0.42
        -15 |        192        0.16        0.59
        -14 |         18        0.02        0.60
        -13 |        290        0.25        0.85
        -12 |         84        0.07        0.92
        -11 |        200        0.17        1.09
        -10 |        265        0.23        1.31
         -9 |        191        0.16        1.48
         -8 |        562        0.48        1.95
         -7 |        518        0.44        2.40
         -6 |        743        0.63        3.03
         -5 |        376        0.32        3.35
         -4 |        502        0.43        3.77
         -3 |      1,349        1.15        4.92
         -2 |      1,881        1.60        6.52
         -1 |     18,793       15.99       22.51
          0 |     60,784       51.71       74.22
          1 |      8,765        7.46       81.67
          2 |      3,119        2.65       84.33
          3 |      2,671        2.27       86.60
          4 |      2,230        1.90       88.50
          5 |      1,711        1.46       89.95
          6 |      1,974        1.68       91.63
          7 |      1,172        1.00       92.63
          8 |      1,303        1.11       93.74
          9 |      1,205        1.03       94.76
         10 |      1,119        0.95       95.71
         11 |        752        0.64       96.35
         12 |        861        0.73       97.09
         13 |        537        0.46       97.54
         14 |        486        0.41       97.96
         15 |        245        0.21       98.17
         16 |        384        0.33       98.49
         17 |        418        0.36       98.85
         18 |        317        0.27       99.12
         19 |        349        0.30       99.41
         21 |         86        0.07       99.49
         22 |         65        0.06       99.54
         23 |         94        0.08       99.62
         24 |        135        0.11       99.74
         25 |         37        0.03       99.77
         26 |        203        0.17       99.94
         27 |         28        0.02       99.97
         28 |         41        0.03      100.00
------------+-----------------------------------
      Total |    117,551      100.00

. * event time relative to that
. generate event_time = year - first_year_expat
(385,624 missing values generated)

. 
. * if foreign manager arrives up to X years before or Y years later than forei
> gn owner, use foreign manager as arrival date. 
. replace foreign = 1 if (manager_after_owner == -2) & inlist(event_time, 0, 1)
(231 real changes made)

. replace foreign = 1 if (manager_after_owner == -1) & inlist(event_time, 0)
(266 real changes made)

. replace foreign = 0 if (manager_after_owner == +1) & inlist(event_time, -1)
(367 real changes made)

. 
. * drop firms where expat arrives earlier than X years before owner
. drop if manager_after_owner < -2
(5,786 observations deleted)

. 
. * ever expat and foreign created after foreign changes (drops were firm level
>  before so should not mess with ever variables)
. foreach X of var expat foreign {
  2.         by frame_id_numeric: egen ever_`X' = max(`X'==1)
  3. }

. 
. * drop if there was an expat but was never foreign - these are likely error
. drop if ever_expat == 1 & ever_foreign == 0
(14,430 observations deleted)

. 
. * drop too many CEO-s
. egen fp_tag = tag(frame_id_numeric manager_id) 

. by frame_id_numeric: egen n_ceo_ever = sum(fp_tag)

. drop if n_ceo_ever > 15
(18,302 observations deleted)

. drop fp_tag n_ceo_ever

.         
. * hired or fired ceo since last observed year of firm
. tempvar previous_year

. generate previous_year = .
(479,087 missing values generated)

. forval t = 1985/2018 {
  2.         quietly by frame_id_numeric: egen `previous_year' = max(cond(year 
> < `t', year, .))
  3.         quietly replace previous_year = `previous_year' if year == `t'
  4.         drop `previous_year'
  5. }

. 
. tempvar next_year

. generate next_year = .
(479,087 missing values generated)

. forval t = 1985/2018 {
  2.         quietly by frame_id_numeric: egen `next_year' = min(cond(year > `t
> ', year, .))
  3.         quietly replace next_year = `next_year' if year == `t'
  4.         drop `next_year'
  5. }

. 
. generate byte hire = (job_begin <= year) & (job_begin > previous_year) & !mis
> sing(previous_year)

. generate byte fire = (job_end >= year) & (job_end < next_year) & !missing(nex
> t_year)

. tabulate hire fire 

           |         fire
      hire |         0          1 |     Total
-----------+----------------------+----------
         0 |   401,379     34,576 |   435,955 
         1 |    37,215      5,917 |    43,132 
-----------+----------------------+----------
     Total |   438,594     40,493 |   479,087 

. 
. * create firm-year data
. collapse (firstnm) foreign ever_expat ever_foreign (count) n_ceo = expat (max
> ) hire_ceo = hire fire_ceo = fire foreignness, by(frame_id_numeric year)

. label values foreignness foreignness

. * define expat as any foreign link. we can limit the sample later
. generate has_expat_ceo = foreignness > 0 & !missing(foreignness)

. 
. * if there is a change in the ceo team, hiring, increement the spell counter
. bys frame_id_numeric (year): gen ceo_spell = sum(hire_ceo) + 1 // so that ind
> ex start from 1

. 
. count
  327,405

. compress
  variable year was float now int
  variable ever_expat was float now byte
  variable ever_foreign was float now byte
  variable n_ceo was long now byte
  variable has_expat_ceo was float now byte
  variable ceo_spell was float now byte
  (5,565,885 bytes saved)

. save "`here'/temp/firm_events.dta", replace
file /Users/koren/Tresorit/Mac/projects/expat//temp/firm_events.dta saved

. log close
      name:  <unnamed>
       log:  /Users/koren/Tresorit/Mac/projects/expat//output/firm_panel.log
  log type:  text
 closed on:  28 Mar 2024, 12:17:16
-------------------------------------------------------------------------------

. 
end of do-file
