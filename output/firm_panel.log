----------------------------------------------------------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /srv/sandbox/expat/almos//output/firm_panel.log
  log type:  text
 opened on:  10 Oct 2023, 12:55:18

. 
. * keep only sample from balance-small - NOTE: had to restructure as we have to keep foreign which is different in years - so no 
> collapse this time
. use "`here'/temp/balance-small-clean.dta"

. by frame_id_numeric: egen firm_birth = min(year)

. by frame_id_numeric: egen firm_death = max(year)

. keep frame_id year firm_birth firm_death foreign

. tempfile sample

. save `sample', replace
(file /srv/sandbox/telegdy/St542713.000001 not found)
file /srv/sandbox/telegdy/St542713.000001 saved as .dta format

. 
. * count expats in do - asterisk used
. *use "`here'/input/ceo-panel/ceo-panel.dta", clear // QUESTION: what is owner
. *rename person_id manager_id
. *merge m:1 frame_id_numeric year using `sample', keep(match) nogen
. *bys frame_id_numeric: egen ever_expat = max(expat == 1)
. *bys frame_id_numeri: egen ever_foreign = max(foreign == 1)
. *egen firm_tag = tag(frame_id_numeric)
. *count if ever_expat == 1 & ever_foreign == 0 & firm_tag == 1
. 
.         use "`here'/input/ceo-panel/ceo-panel.dta", clear // QUESTION: what is owner

.         rename person_id manager_id

.         
.         *for descriptives (number of ceo-s and nceo-s in original data, number of ceo and nceo job-spells in original data)
.         count
  15,390,598

.         egen company_manager_id = group(frame_id_numeric manager_id)

.         codebook manager_id

----------------------------------------------------------------------------------------------------------------------------------
manager_id                                                                                          group(manager_id manager_type)
----------------------------------------------------------------------------------------------------------------------------------

                  Type: Numeric (long)

                 Range: [2,1522645]                   Units: 1
         Unique values: 1,401,271                 Missing .: 0/15,390,598

                  Mean: 825103
             Std. dev.: 387359

           Percentiles:    10%       25%       50%       75%       90%
                        284414    548711    816617   1.1e+06   1.4e+06

.         codebook company_manager_id

----------------------------------------------------------------------------------------------------------------------------------
company_manager_id                                                                              group(frame_id_numeric manager_id)
----------------------------------------------------------------------------------------------------------------------------------

                  Type: Numeric (float)

                 Range: [1,2185311]                   Units: 1
         Unique values: 2,185,311                 Missing .: 0/15,390,598

                  Mean: 1.1e+06
             Std. dev.:  663672

           Percentiles:     10%       25%       50%       75%       90%
                         194578    499718   1.1e+06   1.7e+06   2.1e+06

.         drop company_manager_id

. 
.         * only keep sample firms
.         merge m:1 frame_id_numeric year using `sample', keep(match) nogen
(variable year was int, now float to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                           499,833  
    -----------------------------------------

.         count if first_year_of_firm == firm_birth // QUESTION: why not the same? - same for the last year
  288,737

. 
.         * balance panel
.         egen company_manager_id = group(frame_id manager_id)

.         xtset company_manager_id year

Panel variable: company_manager_id (unbalanced)
 Time variable: year, 1980 to 2018, but with gaps
         Delta: 1 unit

.         by company_manager_id: generate gap = year - year[_n-1] - 1
(78,789 missing values generated)

.         replace gap = 0 if missing(gap)
(78,789 real changes made)

.         tabulate gap

        gap |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |    492,627       98.56       98.56
          1 |      3,923        0.78       99.34
          2 |      1,112        0.22       99.57
          3 |        656        0.13       99.70
          4 |        417        0.08       99.78
          5 |        326        0.07       99.85
          6 |        202        0.04       99.89
          7 |        129        0.03       99.91
          8 |        108        0.02       99.93
          9 |        105        0.02       99.95
         10 |         55        0.01       99.97
         11 |         34        0.01       99.97
         12 |         31        0.01       99.98
         13 |         26        0.01       99.98
         14 |         18        0.00       99.99
         15 |         15        0.00       99.99
         16 |         11        0.00       99.99
         17 |         10        0.00       99.99
         18 |          6        0.00      100.00
         19 |          7        0.00      100.00
         20 |          6        0.00      100.00
         21 |          3        0.00      100.00
         22 |          2        0.00      100.00
         23 |          1        0.00      100.00
         24 |          1        0.00      100.00
         25 |          2        0.00      100.00
------------+-----------------------------------
      Total |    499,833      100.00

. 
.         * fill in gap if only 1 or 2-year long
.         
.         *forval i = 1(1)2 {
.         *       sort company_manager_id year
.         *       expand 1 + `i' if gap == `i', generate(filled_in_`i') // FIXME OR QUESTION: maybe second year as well
.         *       replace year = year - `i' if filled_in_`i'
.         *       tab filled_in_`i'
.         *}
.         
.         *bys company_manager_id year: replace year = year + _n - 1 if filled_in_2
.         
.         expand 1 + (gap == 1), generate(filled_in)
(3,923 observations created)

.         replace year = year - 1 if filled_in
(3,923 real changes made)

. 
.         * create contiguous spells
.         xtset company_manager_id year

Panel variable: company_manager_id (unbalanced)
 Time variable: year, 1980 to 2018, but with gaps
         Delta: 1 unit

.         gen change = ceo != L.ceo // intuition: should be ok in both files (possible FIXME)

.         bysort company_manager_id (year): gen job_spell = sum(change)

. 
.         * create job begin and end for each manager spell
.         bys frame_id_numeric manager_id job_spell: egen job_begin = min(year)

.         bys frame_id_numeric manager_id job_spell: egen job_end = max(year)

.         keep frame_id_numeric manager_id job_spell year job_begin job_end expat founder insider outsider firm_birth foreign coun
> try_code

. 
.         * if first managers arrive in year 1, extrapolate to year 0 - DROP SPELL
.         bys frame_id_numeric: egen first_cohort = min(job_begin)

.         replace job_begin = job_begin - 1 if (first_cohort == firm_birth + 1) & (job_begin == first_cohort)
(41,966 real changes made)

. 
.         * NOTE: no collapse and expand --> there might be holes
.         sort frame_id_numeric manager_id year

.         count if frame_id_numeric == frame_id_numeric[_n-1] & manager_id == manager_id[_n-1] & year != (year[_n-1] + 1)
  3,283

. 
.         * expat before 1990
.         replace expat = 0 if job_begin < 1990
(363 real changes made)

. 
.         ***********************
.         * time invariant vars and drop entire series of firms from sample *
.         ***********************
.                 by frame_id_numeric: egen first_year_expat = min(cond(expat == 1, job_begin,.))
(419,381 missing values generated)

.                 by frame_id_numeric: egen first_year_foreign = min(cond(foreign == 1, year,.))
(410,829 missing values generated)

.                 
.                 * which of the two happened first?
.                 generate manager_after_owner = first_year_expat - first_year_foreign
(436,148 missing values generated)

.                 * event time relative to that
.                 generate event_time = year - first_year_expat
(419,381 missing values generated)

.                 
.                 * if foreign manager arrives up to 2 years before 1 year later than foreign owner, use foreign manager as arriva
> l date. this is easier to implement
.                 replace foreign = 1 if (manager_after_owner == -2) & inlist(event_time, 0, 1)
(37 real changes made)

.                 replace foreign = 1 if (manager_after_owner == -1) & inlist(event_time, 0)
(48 real changes made)

.                 replace foreign = 0 if (manager_after_owner == +1) & inlist(event_time, -1)
(20 real changes made)

. 
.                 * QUESTION: order of deletions (may be fine as all are firm level)
.                 * drop firms where expat arrives earlier than 2 years before owner
.                 drop if manager_after_owner < -2
(6,048 observations deleted)

.                 
.                 * ever expat and foreign created after foreign changes (drops were firm level before so should not mess with eve
> r variables)
.                 foreach X of var expat foreign {
  2.                         by frame_id_numeric: egen ever_`X'_ceo = max(`X'==1)
  3.                 }

. 
.                 * drop if there was an expat but was never foreign
.                 drop if ever_expat == 1 & ever_foreign == 0
(16,767 observations deleted)

.                 scalar dropped_do3_expat_firmyears = r(N_drop)

.                 
.                 * drop too many CEO-s - FIXME AND QUESTION: should be moved in the next file where spells are limited - but ther
> e cannot be created without manager level data
.                 egen fp_tag = tag(frame_id_numeric manager_id) 

.                 by frame_id_numeric: egen n_ceo_ever = sum(fp_tag)

.                 drop if n_ceo > 15
(13,372 observations deleted)

.                 scalar dropped_too_many_CEOs = r(N_drop)

.                 drop fp_tag n_ceo_ever

.                 
.         * hired or fired ceo since last observed year of firm - * POSSIBLE FIXME: expat, owner, insider, outsider, founder - hir
> e, fire combinations later
.         tempvar previous_year

.         generate previous_year = .
(467,569 missing values generated)

.         forval t = 1985/2018 {
  2.                 by frame_id_numeric: egen `previous_year' = max(cond(year < `t', year, .))
  3.                 replace previous_year = `previous_year' if year == `t'
  4.                 drop `previous_year'
  5.         }
(411,592 missing values generated)
(2,011 real changes made)
(408,492 missing values generated)
(2,270 real changes made)
(406,548 missing values generated)
(2,466 real changes made)
(404,210 missing values generated)
(2,709 real changes made)
(402,944 missing values generated)
(2,777 real changes made)
(396,460 missing values generated)
(3,279 real changes made)
(353,599 missing values generated)
(6,475 real changes made)
(310,866 missing values generated)
(8,232 real changes made)
(256,047 missing values generated)
(10,151 real changes made)
(213,122 missing values generated)
(11,719 real changes made)
(181,426 missing values generated)
(12,586 real changes made)
(161,048 missing values generated)
(12,953 real changes made)
(140,917 missing values generated)
(13,409 real changes made)
(119,953 missing values generated)
(14,113 real changes made)
(103,867 missing values generated)
(14,495 real changes made)
(92,345 missing values generated)
(14,663 real changes made)
(78,334 missing values generated)
(15,028 real changes made)
(65,535 missing values generated)
(15,452 real changes made)
(56,110 missing values generated)
(15,620 real changes made)
(49,214 missing values generated)
(16,382 real changes made)
(42,614 missing values generated)
(16,526 real changes made)
(36,740 missing values generated)
(16,602 real changes made)
(30,585 missing values generated)
(16,901 real changes made)
(25,887 missing values generated)
(17,526 real changes made)
(20,902 missing values generated)
(17,290 real changes made)
(17,087 missing values generated)
(17,074 real changes made)
(13,598 missing values generated)
(16,797 real changes made)
(10,449 missing values generated)
(16,642 real changes made)
(7,750 missing values generated)
(16,671 real changes made)
(5,295 missing values generated)
(16,328 real changes made)
(3,193 missing values generated)
(15,273 real changes made)
(1,841 missing values generated)
(15,253 real changes made)
(815 missing values generated)
(15,193 real changes made)
(229 missing values generated)
(14,751 real changes made)

. 
.         by frame_id_numeric: egen first_year = min(year)

.         bys frame_id_numeric (year): generate byte hire = cond(first_year == year, 1, (job_begin <= year) & (job_begin > previou
> s_year))

. 
.         tempvar next_year

.         generate next_year = .
(467,569 missing values generated)

.         forval t = 1985/2018 {
  2.                 by frame_id_numeric: egen `next_year' = min(cond(year > `t', year, .))
  3.                 replace next_year = `next_year' if year == `t'
  4.                 drop `next_year'
  5.         }
(2,270 real changes made)
(2,467 real changes made)
(10 missing values generated)
(2,718 real changes made)
(195 missing values generated)
(2,779 real changes made)
(290 missing values generated)
(3,276 real changes made)
(1,341 missing values generated)
(6,497 real changes made)
(6,357 missing values generated)
(8,412 real changes made)
(11,722 missing values generated)
(10,361 real changes made)
(16,330 missing values generated)
(11,624 real changes made)
(21,035 missing values generated)
(12,615 real changes made)
(25,192 missing values generated)
(12,981 real changes made)
(29,817 missing values generated)
(13,472 real changes made)
(34,366 missing values generated)
(13,960 real changes made)
(38,770 missing values generated)
(14,540 real changes made)
(44,863 missing values generated)
(14,499 real changes made)
(50,053 missing values generated)
(14,977 real changes made)
(54,870 missing values generated)
(15,328 real changes made)
(60,790 missing values generated)
(15,582 real changes made)
(66,644 missing values generated)
(15,633 real changes made)
(74,403 missing values generated)
(16,262 real changes made)
(81,149 missing values generated)
(16,435 real changes made)
(88,274 missing values generated)
(16,507 real changes made)
(95,615 missing values generated)
(16,751 real changes made)
(105,011 missing values generated)
(17,225 real changes made)
(113,470 missing values generated)
(17,007 real changes made)
(121,545 missing values generated)
(16,856 real changes made)
(129,369 missing values generated)
(16,654 real changes made)
(136,074 missing values generated)
(16,555 real changes made)
(146,307 missing values generated)
(16,407 real changes made)
(167,237 missing values generated)
(15,471 real changes made)
(175,311 missing values generated)
(15,124 real changes made)
(182,477 missing values generated)
(15,136 real changes made)
(194,948 missing values generated)
(14,668 real changes made)
(467,569 missing values generated)
(0 real changes made)

. 
.         gen byte fire = ((job_end >= year) & (job_end < next_year))

.         tabulate hire fire 

           |         fire
      hire |         0          1 |     Total
-----------+----------------------+----------
         0 |   327,385     66,640 |   394,025 
         1 |    56,880     16,664 |    73,544 
-----------+----------------------+----------
     Total |   384,265     83,304 |   467,569 

. 
.         gen hire_expat_ceo = hire * expat

.         gen fire_expat_ceo = fire * expat

. 
.         * number of expats and locals
.         bys frame_id_numeric year: egen n_expat_ceo = total(cond(expat, 1, 0)) // could be in collapse but local not

.         bys frame_id_numeric year: egen n_local_ceo = total(cond(!expat, 1, 0))

.         
.         * create firm-year data
.         * FIXME: country_code may be different within a firm-year
.         collapse (sum) n_founder_ceo = founder n_insider_ceo = insider n_outsider_ceo = outsider (firstnm) n_expat_ceo n_local_c
> eo foreign_ceo = foreign ever_expat_ceo ever_foreign_ceo (count) n_ceo = expat (max) hire_ceo = hire fire_ceo = fire hire_expat_
> ceo fire_expat_ceo, by(frame_id_numeric year)

. 
.         * managers in first year not classified as new hires and in last year not classified as fired
.         bys frame_id_numeric (year): replace hire_ceo = 0 if (_n==1)
(25,603 real changes made)

.         bys frame_id_numeric (year): replace fire_ceo = 0 if (_n==_N)
(25,603 real changes made)

.         bys frame_id_numeric (year): replace hire_expat_ceo = 0 if (_n==1)
(1230 real changes made)

.         bys frame_id_numeric (year): replace fire_expat_ceo = 0 if (_n==_N)
(1466 real changes made)

.         bys frame_id_numeric (year): gen ceo_spell_ceo = sum(hire_ceo | fire_ceo) + 1 // so that index start from 1

. 
.         * create dummies from numbers
.         foreach var in expat local founder insider outsider {
  2.                 gen has_`var'_ceo = (n_`var'_ceo > 0) & n_`var'_ceo != .
  3.         }

.         
. count
  322,655

. compress
  variable year was float now int
  variable n_expat_ceo was float now byte
  variable n_local_ceo was float now byte
  variable ever_expat_ceo was float now byte
  variable ever_foreign_ceo was float now byte
  variable n_ceo was long now byte
  variable hire_expat_ceo was float now byte
  variable fire_expat_ceo was float now byte
  variable ceo_spell_ceo was float now byte
  variable has_expat_ceo was float now byte
  variable has_local_ceo was float now byte
  variable has_founder_ceo was float now byte
  variable has_insider_ceo was float now byte
  variable has_outsider_ceo was float now byte
  variable n_founder_ceo was double now byte
  variable n_insider_ceo was double now byte
  variable n_outsider_ceo was double now byte
  (20,004,610 bytes saved)

. *save_all_to_json
. save "`here'/temp/firm_events_2310.dta", replace
file /srv/sandbox/expat/almos//temp/firm_events_2310.dta saved

. log close
      name:  <unnamed>
       log:  /srv/sandbox/expat/almos//output/firm_panel.log
  log type:  text
 closed on:  10 Oct 2023, 12:56:01
----------------------------------------------------------------------------------------------------------------------------------
