-------------------------------------------------------------------------------
      name:  <unnamed>
       log:  /Users/koren/Tresorit/Mac/projects/expat//output/firm_panel.log
  log type:  text
 opened on:   6 May 2024, 17:06:44

. 
. * keep only sample from balance-small
. use "`here'/temp/balance-small-clean.dta"

. by frame_id_numeric: egen firm_birth = min(year)

. by frame_id_numeric: egen firm_death = max(year)

. keep frame_id_numeric year firm_birth firm_death foreign

. tempfile sample

. save `sample', replace
(file /var/folders/3b/07ltjm9n0rq1pwkn1_49vqn40000gn/T//St40351.000001 not
    found)
file /var/folders/3b/07ltjm9n0rq1pwkn1_49vqn40000gn/T//St40351.000001 saved
    as .dta format

. 
. use "`here'/temp/ceo-panel.dta", clear 

. 
. * only keep sample firms
. merge m:1 frame_id_numeric year using `sample', keep(match) nogen
(variable year was int, now float to accommodate using data's values)

    Result                      Number of obs
    -----------------------------------------
    Not matched                             0
    Matched                           929,502  
    -----------------------------------------

. count if first_year_of_firm == firm_birth
  558,214

. 
. *for descriptives (number of ceo-s and nceo-s in original data, number of ceo
>  and nceo job-spells in original data)
. count
  929,502

. egen company_manager_id = group(frame_id_numeric manager_id)

. codebook manager_id

-------------------------------------------------------------------------------
manager_id                                                    group(manager_id)
-------------------------------------------------------------------------------

                  Type: Numeric (long)

                 Range: [2,1607091]                   Units: 1
         Unique values: 119,322                   Missing .: 0/929,502

                  Mean: 868220
             Std. dev.: 409165

           Percentiles:    10%       25%       50%       75%       90%
                        290971    603981    851069   1.2e+06   1.4e+06

. codebook company_manager_id

-------------------------------------------------------------------------------
company_manager_id                           group(frame_id_numeric manager_id)
-------------------------------------------------------------------------------

                  Type: Numeric (float)

                 Range: [1,139323]                    Units: 1
         Unique values: 139,323                   Missing .: 0/929,502

                  Mean: 67664.7
             Std. dev.: 39942.3

           Percentiles:     10%       25%       50%       75%       90%
                          12869     33513     67179    100437    123905

. 
. * balance panel
. xtset company_manager_id year

Panel variable: company_manager_id (unbalanced)
 Time variable: year, 1980 to 2018, but with gaps
         Delta: 1 unit

. by company_manager_id: generate gap = year - year[_n-1] - 1
(139,323 missing values generated)

. replace gap = 0 if missing(gap)
(139,323 real changes made)

. tabulate gap

        gap |      Freq.     Percent        Cum.
------------+-----------------------------------
          0 |    917,679       98.73       98.73
          1 |      6,462        0.70       99.42
          2 |      1,776        0.19       99.61
          3 |      1,093        0.12       99.73
          4 |        667        0.07       99.80
          5 |        550        0.06       99.86
          6 |        340        0.04       99.90
          7 |        213        0.02       99.92
          8 |        189        0.02       99.94
          9 |        159        0.02       99.96
         10 |         82        0.01       99.97
         11 |         68        0.01       99.98
         12 |         47        0.01       99.98
         13 |         44        0.00       99.99
         14 |         32        0.00       99.99
         15 |         26        0.00       99.99
         16 |         22        0.00       99.99
         17 |          9        0.00      100.00
         18 |          7        0.00      100.00
         19 |          9        0.00      100.00
         20 |          9        0.00      100.00
         21 |          8        0.00      100.00
         22 |          3        0.00      100.00
         23 |          3        0.00      100.00
         24 |          1        0.00      100.00
         25 |          4        0.00      100.00
------------+-----------------------------------
      Total |    929,502      100.00

. 
. * fill in holes of 1 year, but not longer
. expand 1 + (gap == 1), generate(filled_in)
(6,462 observations created)

. replace year = year - 1 if filled_in
(6,462 real changes made)

. 
. * create contiguous spells
. xtset company_manager_id year

Panel variable: company_manager_id (unbalanced)
 Time variable: year, 1980 to 2018, but with gaps
         Delta: 1 unit

. gen change = ceo != L.ceo

. bysort company_manager_id (year): gen job_spell = sum(change)

. 
. * create job begin and end for each manager spell
. bys frame_id_numeric manager_id job_spell: egen job_begin = min(year)

. bys frame_id_numeric manager_id job_spell: egen job_end = max(year)

. keep frame_id_numeric manager_id job_spell year job_begin job_end firm_birth 
> foreign foreignness

. 
. * if first managers arrive in year 1, extrapolate to year 0 - DROP SPELL
. bys frame_id_numeric: egen first_cohort = min(job_begin)

. replace job_begin = job_begin - 1 if (first_cohort == firm_birth + 1) & (job_
> begin == first_cohort)
(118,936 real changes made)

. 
. * NOTE: no collapse and expand --> there might be holes
. sort frame_id_numeric manager_id year

. count if frame_id_numeric == frame_id_numeric[_n-1] & manager_id == manager_i
> d[_n-1] & year != (year[_n-1] + 1)
  5,361

. 
. * hired or fired ceo since last observed year of firm
. tempvar previous_year

. generate previous_year = .
(935,964 missing values generated)

. forval t = 1985/2018 {
  2.         quietly by frame_id_numeric: egen `previous_year' = max(cond(year 
> < `t', year, .))
  3.         quietly replace previous_year = `previous_year' if year == `t'
  4.         drop `previous_year'
  5. }

. 
. tempvar next_year

. generate next_year = .
(935,964 missing values generated)

. forval t = 1985/2018 {
  2.         quietly by frame_id_numeric: egen `next_year' = min(cond(year > `t
> ', year, .))
  3.         quietly replace next_year = `next_year' if year == `t'
  4.         drop `next_year'
  5. }

. 
. generate byte hire = (job_begin <= year) & (job_begin > previous_year) & !mis
> sing(previous_year)

. * first cohort of managers are classified as newly hired
. replace hire = 1 if job_begin == first_cohort
(422,572 real changes made)

. generate byte fire = (job_end >= year) & (job_end < next_year) & !missing(nex
> t_year)

. tabulate hire fire 

           |         fire
      hire |         0          1 |     Total
-----------+----------------------+----------
         0 |   400,411     36,397 |   436,808 
         1 |   462,640     36,516 |   499,156 
-----------+----------------------+----------
     Total |   863,051     72,913 |   935,964 

. 
. generate byte expat = foreignness > 0

. 
. * manager change may anticipate foreign change by max this many years
. local anticipation 2

. local lag 1

. tempvar time_foreign first_year_foreign ever_expat

. ***********************
. * time invariant vars and drop entire series of firms from sample *
. ***********************
. by frame_id_numeric: egen `first_year_foreign' = min(cond(foreign == 1, year,
> .))
(714,649 missing values generated)

. generate `time_foreign' = year - `first_year_foreign'
(714,649 missing values generated)

. by frame_id_numeric: egen `ever_expat' = max((expat == 1) & inrange(`time_for
> eign', -`anticipation', `lag'))

. by frame_id_numeric: egen first_year_hire = min(cond((hire == 1) & (`time_for
> eign' >= -`anticipation'), job_begin,.))
(59,591 missing values generated)

. by frame_id_numeric: egen first_year_expat = min(cond(expat == 1, job_begin,.
> ))
(746,991 missing values generated)

. by frame_id_numeric: egen first_year_foreign = min(cond(foreign == 1, year,.)
> )
(714,649 missing values generated)

. 
. * which of the two happened first?
. generate expat_after_owner = first_year_expat - first_year_foreign
(771,386 missing values generated)

. generate manager_after_owner = first_year_hire - first_year_foreign
(723,863 missing values generated)

. tabulate manager_after_owner

manager_aft |
   er_owner |      Freq.     Percent        Cum.
------------+-----------------------------------
        -33 |         46        0.02        0.02
        -28 |         52        0.02        0.05
        -27 |        142        0.07        0.11
        -26 |         54        0.03        0.14
        -25 |        144        0.07        0.21
        -24 |        152        0.07        0.28
        -23 |        138        0.07        0.34
        -22 |        140        0.07        0.41
        -21 |         73        0.03        0.44
        -20 |         74        0.03        0.48
        -19 |        204        0.10        0.57
        -18 |        247        0.12        0.69
        -17 |        596        0.28        0.97
        -16 |      1,014        0.48        1.45
        -15 |        610        0.29        1.74
        -14 |        656        0.31        2.05
        -13 |        907        0.43        2.47
        -12 |      1,125        0.53        3.01
        -11 |      1,317        0.62        3.63
        -10 |      1,182        0.56        4.18
         -9 |      1,226        0.58        4.76
         -8 |      1,338        0.63        5.39
         -7 |      1,411        0.67        6.06
         -6 |      2,004        0.94        7.00
         -5 |      2,240        1.06        8.06
         -4 |      3,051        1.44        9.50
         -3 |      4,066        1.92       11.41
         -2 |     13,402        6.32       17.73
         -1 |     17,924        8.45       26.18
          0 |    119,900       56.53       82.71
          1 |     10,494        4.95       87.66
          2 |      5,705        2.69       90.35
          3 |      4,093        1.93       92.28
          4 |      2,713        1.28       93.56
          5 |      2,319        1.09       94.65
          6 |      2,135        1.01       95.66
          7 |      1,937        0.91       96.57
          8 |      1,283        0.60       97.18
          9 |      1,081        0.51       97.69
         10 |        672        0.32       98.00
         11 |        527        0.25       98.25
         12 |      1,004        0.47       98.73
         13 |        520        0.25       98.97
         14 |        345        0.16       99.13
         15 |        386        0.18       99.32
         16 |        261        0.12       99.44
         17 |        217        0.10       99.54
         18 |        150        0.07       99.61
         19 |        311        0.15       99.76
         20 |        187        0.09       99.85
         21 |         27        0.01       99.86
         22 |         86        0.04       99.90
         23 |         56        0.03       99.93
         25 |         83        0.04       99.97
         26 |         74        0.03      100.00
------------+-----------------------------------
      Total |    212,101      100.00

. 
. * if foreign manager arrives up to X years before or Y years later than forei
> gn owner, use foreign manager as arrival date. 
. forvalues t = -`anticipation'/-1 {
  2.         local k = abs(`t') - 1
  3.         replace foreign = 1 if (expat_after_owner == `t')       & inrange(
> year - first_year_expat, 0, `k')      & `ever_expat' 
  4.         replace foreign = 1 if (manager_after_owner == `t') & inrange(year
>  - first_year_hire, 0, `k')   & !`ever_expat'
  5. }
(364 real changes made)
(900 real changes made)
(376 real changes made)
(589 real changes made)

. forvalues t = 1/`lag' {
  2.         local minust = -`t'
  3.         replace foreign = 0 if (expat_after_owner == `t')       & inrange(
> year - first_year_expat, `minust', -1)        & `ever_expat'
  4.         replace foreign = 0 if (manager_after_owner == `t') & inrange(year
>  - first_year_hire, `minust', -1)             & !`ever_expat'
  5. }
(519 real changes made)
(211 real changes made)

. * drop firms where expat arrives earlier than X years before owner
. drop if first_year_expat - first_year_foreign < -`anticipation'
(8,213 observations deleted)

. 
. * ever expat and foreign created after foreign changes (drops were firm level
>  before so should not mess with ever variables)
. foreach X of var expat foreign {
  2.         by frame_id_numeric: egen ever_`X' = max(`X'==1)
  3. }

. 
. * drop if there was an expat but was never foreign - these are likely error
. drop if ever_expat == 1 & ever_foreign == 0
(24,424 observations deleted)

. 
. * drop too many CEO-s
. egen fp_tag = tag(frame_id_numeric manager_id) 

. by frame_id_numeric: egen n_ceo_ever = sum(fp_tag)

. drop if n_ceo_ever > 15
(19,830 observations deleted)

. drop fp_tag n_ceo_ever

.         
. * create firm-year data
. collapse (firstnm) foreign ever_expat ever_foreign (count) n_ceo = expat (max
> ) hire_ceo = hire fire_ceo = fire foreignness, by(frame_id_numeric year)

. label values foreignness foreignness

. * define expat as any foreign link. we can limit the sample later
. generate has_expat_ceo = foreignness > 0 & !missing(foreignness)

. 
. * if there is a change in the ceo team, hiring, increement the spell counter
. bys frame_id_numeric (year): gen ceo_spell = sum(hire_ceo) + 1 // so that ind
> ex start from 1

. 
. count
  619,226

. compress
  variable year was float now int
  variable ever_expat was float now byte
  variable ever_foreign was float now byte
  variable n_ceo was long now byte
  variable has_expat_ceo was float now byte
  variable ceo_spell was float now byte
  (10,526,842 bytes saved)

. save "`here'/temp/firm_events.dta", replace
file /Users/koren/Tresorit/Mac/projects/expat//temp/firm_events.dta saved

. log close
      name:  <unnamed>
       log:  /Users/koren/Tresorit/Mac/projects/expat//output/firm_panel.log
  log type:  text
 closed on:   6 May 2024, 17:07:33
-------------------------------------------------------------------------------
